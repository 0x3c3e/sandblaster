#!/bin/bash

EXTRACT_SBPROFILES=../tools/sandbox_toolkit/extract_sbprofiles/extract_sbprofiles

if ! test -f "$EXTRACT_SBPROFILES"; then
    echo "Error: extract_sbops executable does not exist at $EXTRACT_SBPROFILES" 1>&2
    echo "Make sure you compiled it." 1>&2
    exit 1
fi

if test $# -lt 2 -o $# -gt 3; then
    echo "Usage: $0 <sandbox-extension>/<sandboxd> <ios-version> [<output-folder>]" 1>&2
    echo "" 1>&2
    echo "Arguments the kernel sandbox extension *or* sandboxd and the iOS version (such as 7, 7.1, 7.1.1) it belongs to" 1>&2
    echo "kernel sandbox extension is required for version greater or equal to 9" 1>&2
    echo "sandboxd is required for versions less or equal to 8" 1>&2
    echo "optional third argument is the output folder, defaults to current directory" 1>&2
    exit 1
fi

if test $# -eq 3; then
    output_folder="$3"
else
    output_folder="."
fi

binary_file="$1"
ios_version="${2%%.*}"

if ! test -d "$output_folder"; then
    echo "Third argument $output_folder is not a folder" 2>1
    exit 1
fi

if ! [[ "$ios_version" =~ ^[0-9]+$ ]]; then
    echo "Second argument must be an iOS version (such as 7, 7.1, 7.1.1)" 1>&2
    exit 1
fi

if test "$ios_version" -le 6; then
    echo "No support for iOS <= 6 yet." 1>&2
    exit 1
elif test "$ios_version" -le 8; then
    echo "Extracting sandbox profiles of iOS $ios_version ..." 1>&2
    "$EXTRACT_SBPROFILES" -s -o "$output_folder/" "$binary_file"
elif test "$ios_version" -le 11; then
    # Find offset where bundle starts.
    bundle_start_offset=$(./get_sb_bundle_start_offset.py "$binary_file")
    if test -z "$bundle_start_offset"; then
        echo "Unable to extract offset for sandbox bundle in $binary_file" 1>&2
        exit 0
    fi
    /bin/dd if="$binary_file" of="$output_folder"/sandbox_bundle skip="$bundle_start_offset" bs=1 > /dev/null 2>&1
else
    echo "Unknown or unsupported iOS major version $ios_version" 1>&2
    exit 1
fi
