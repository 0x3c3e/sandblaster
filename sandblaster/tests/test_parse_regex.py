from parsers.regex import analyze
import pytest


TEST_CASES = [
    (
        b"\x00\x00\x00\x03\x15\x00\x19\x02\x2f\x02\x61\x02\x2f\x02\x62\x02\x2f\x2f\x13\x00\x02\x63\x0a\x0b\x00\x15\x00",
        "^/a/b/c*",
    ),
    (
        b"\x00\x00\x00\x03\x1c\x00\x19\x02\x2f\x02\x61\x02\x2f\x4b\x62\x62\x63\x63\x64\x64\x65\x65\x02\x2f\x2f\x1a\x00\x02\x66\x0a\x12\x00\x15\x00",
        "^/a/[bcde]/f*",
    ),
    (
        b"\x00\x00\x00\x03\x22\x00\x19\x02\x2f\x02\x61\x2f\x0b\x00\x0a\x03\x00\x02\x2f\x4b\x62\x62\x63\x63\x64\x64\x65\x65\x02\x2f\x2f\x20\x00\x02\x66\x0a\x18\x00\x15\x00",
        "^/aa*/[bcde]/f*",
    ),
    (
        b"\x00\x00\x00\x03\x28\x00\x19\x02\x2f\x02\x61\x2f\x0b\x00\x0a\x03\x00\x02\x2f\x4b\x62\x62\x63\x63\x64\x64\x65\x65\x2f\x1c\x00\x0a\x0d\x00\x02\x2f\x2f\x26\x00\x02\x66\x0a\x1e\x00\x15\x00",
        "^/aa*/[bcde][bcde]*/f*",
    ),
    (
        b"\x00\x00\x00\x03\x2c\x00\x19\x09\x2f\x08\x00\x0a\x01\x00\x02\x2f\x02\x61\x2f\x12\x00\x0a\x0a\x00\x02\x2f\x2f\x1f\x00\x2b\x2f\x2e\x30\x2d\x0a\x14\x00\x02\x2f\x2f\x29\x00\x02\x66\x0a\x21\x00\x29\x15\x00",
        "^..*/aa*/[^./]*/f*",
    ),
]


@pytest.mark.parametrize("input_bytes,expected", TEST_CASES)
def test_parse_regex(input_bytes, expected):
    """Test parse_fsm_string with various input patterns."""
    assert analyze(input_bytes) == expected
